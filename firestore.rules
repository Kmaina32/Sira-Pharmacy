rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for Admin role
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Products: Public can read, Admins can write
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Settings: Public can read, Admins can write
    match /settings/store_config {
        allow read: if true;
        allow write: if isAdmin();
    }
    
    // Users: Users can read/update their own data, Admins can read all
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId;
      // Create is handled by backend functions
      allow create: if request.auth != null;
    }
    
    // Orders: Users can read their own, Admins can read/update all
    match /orders/{orderId} {
      allow create: if request.auth.uid != null;
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow update: if isAdmin();
    }
    
    // Notifications: Users can read/update their own, Admins can read all.
    match /notifications/{notificationId} {
        allow read, update: if isAdmin() || request.auth.uid == resource.data.userId;
        allow create: if isAdmin();
    }
    
    // Contact Messages: Anyone can create, only Admins can read/update.
    match /contact_messages/{messageId} {
        allow create: if true;
        allow read, update: if isAdmin();
    }
    
    // Newsletter: Anyone can create, only Admins can read.
    match /newsletter/{subscriptionId} {
        allow create: if true;
        allow read: if isAdmin();
    }
    
    // Logs: Only backend/Admins can write, only Admins can read.
    match /logs/{logId} {
      allow read: if isAdmin();
      allow write: if isAdmin(); // Should be locked down further in real-world to backend only
    }
  }
}
