
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow public read on products, settings, and brands
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }
    match /settings/store_config {
        allow read: if true;
        allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }
     match /brands/{brandId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Allow any user to create contact messages, only admins to read/manage
    match /contact_messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if request.auth != null && request.auth.token.isAdmin == true;
    }

    // Allow any user to subscribe to the newsletter
    match /newsletter/{subscriptionId} {
        allow create: if true;
        allow read, update, delete: if request.auth != null && request.auth.token.isAdmin == true;
    }
    
    // Users can only read/write their own data
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    // Admins can read all user data
     match /users/{userId} {
      allow read: if request.auth != null && request.auth.token.isAdmin == true;
    }
    
    // Users can create orders for themselves, admins can manage all orders
    match /orders/{orderId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update, delete: if request.auth != null && (request.resource.data.userId == request.auth.uid || request.auth.token.isAdmin == true);
    }
    
    // Only authenticated users can read their own notifications, admins can read all
    match /notifications/{notificationId} {
        allow read, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Admins can't create notifications directly, this is done via the newsletter flow
        allow create, delete: if false; 
    }
    
    // Audit logs can only be written by server/backend, read by admins
    match /logs/{logId} {
        allow create: if true; // Ideally restricted to server-side calls, but simplified for now
        allow read: if request.auth != null && request.auth.token.isAdmin == true;
        allow update, delete: if false;
    }
  }
}
